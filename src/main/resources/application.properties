spring.application.name=service-commentaire
# Loggers
spring.output.ansi.enabled = always
logging.level.org.springframework = DEBUG
logging.level.fr.formation = DEBUG

spring.datasource.url = jdbc:postgresql://127.0.0.1:5432/test

spring.datasource.username = postgres
spring.datasource.password = DaProModred536753.

spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql = true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=8081


# URL du serveur Eureka (supposons quâ€™il tourne sur localhost:8761)
eureka.client.service-url.defaultZone=http://localhost:9000/eureka

# Activer l'enregistrement automatique
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Configuration du Circuit Breaker
resilience4j.circuitbreaker.configs.default.failure-rate-threshold = 50
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls = 3
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state = 10
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state = 5s
resilience4j.circuitbreaker.configs.default.sliding-window-size = 5
resilience4j.circuitbreaker.configs.default.sliding-window-type = count-based
resilience4j.circuitbreaker.configs.default.slow-call-duration-threshold = 1s
resilience4j.circuitbreaker.configs.default.slow-call-rate-threshold = 50
resilience4j.circuitbreaker.configs.default.record-exceptions = java.util.concurrent.TimeoutException


spring.cloud.openfeign.circuitbreaker.enabled=true
spring.cloud.openfeign.circuitbreaker.alphanumeric-ids.enabled=true

spring.kafka.consumer.group-id=commentaire-consumer-group
spring.kafka.bootstrap-servers=localhost:9092  
spring.kafka.consumer.auto-offset-reset=earliest


spring.cloud.stream.bindings.nomEvenement1-in-0.destination = nom-topic
spring.cloud.stream.bindings.nomEvenement1-in-0.group = nomService